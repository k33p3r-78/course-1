# [Задача со звездочкой]: усложненный вариант задания 3. Написать функцию thesaurus_adv(), 
# принимающую в качестве аргументов строки в формате «Имя Фамилия» и возвращающую словарь, 
# в котором ключи — первые буквы фамилий, а значения — словари, реализованные по схеме предыдущего задания 
# и содержащие записи, в которых фамилия начинается с соответствующей буквы.
# Условие задачи
# Техническое задание

# Количество передаваемых строк в функцию может быть любым. Считаем, что переданы будут только корректные строки.
# Вернуть словарь, с ключами, отсортированными в алфавитном порядке.
# Примеры/Тесты:


# >>> thesaurus_adv("Иван Сергеев", "Алла Сидорова", "Инна Серова",
#            "Петр Алексеев", "Илья Иванов", "Анна Савельева", "Василий Суриков")
# {
#    'А':{
#           'П': ['Петр Алексеев']},
#    'И': {
#           'И': ['Илья Иванов']},
#    'С': {
#           'А': ['Алла Сидорова', 'Анна Савельева'],
#           'В': ['Василий Суриков'],
#           'И': ['Иван Сергеев', 'Инна Серова']}}

# Усложнение:

# Поменяйте местами фамилию и имя в строках. Т.е. вместо 'Петр Алексеев' в конечный словарь вносить 'Алексеев Петр'
# Это преобразование не должно потребовать дополнительного прохода по словарю или списку параметров.


def thesaurus_adv(*names):
    res = {}
    for full_name in sorted(names):
        name, soname = full_name.split()
        name_key, soname_key = name[0], soname[0]
        full_name = f'{soname} {name}'
        if soname_key in res:
            if name_key in res[soname_key]:
                res[soname_key][name_key].append(full_name)
            else:
                res[soname_key][name_key] = [ full_name, ]
        else:
            res[soname_key] = {name_key: [ full_name, ]}

    res_sorted = {}
    for key in sorted(res):
        res_sorted[key] = res[key]

    return res_sorted


if __name__ == '__main__':
    output = thesaurus_adv("Иван Сергеев", "Алла Сидорова", "Инна Серова", 
                        "Петр Алексеев", "Илья Иванов", "Анна Савельева", "Василий Суриков")
    for key, value in output.items():
        print(f'"{key}": {value}')
            